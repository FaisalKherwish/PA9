/*
Menu m1;

event:
        if (sf::Mouse::isButtonPressed(sf::Mouse::Button::Left)) {
            menU.delMenu(); change shape to transparent. 
        }

window.draw(m1.getShape());

*/

class Menu {
public:

	Menu();
	~Menu();
	void delMenu();

	void setShape(sf::RectangleShape newShape);
	sf::RectangleShape getShape();

	void setColour(sf::Color newColor);
	sf::Color getColour();

private:
	sf::RectangleShape shape;
	sf::Color colour;
};

Menu::Menu() {
	shape.setSize(sf::Vector2f(1080, 1080));//set shape to full size of screen
	sf::Color colour(sf::Color::Green);
	shape.setFillColor(colour);//sets colour can change later 
	shape.setPosition(sf::Vector2f(0,0));
}

Menu::~Menu() {
	
}

void Menu::setShape(const sf::RectangleShape newShape) {
	shape = newShape;
}

sf::RectangleShape Menu::getShape() {
	return shape;
}

void Menu::setColour(sf::Color newColor) {
	colour = newColor;
}
sf::Color Menu::getColour() {
	return colour;
}

void Menu::delMenu() {
		shape.setFillColor(sf::Color::Transparent);//just sets colour to transparent with event conditions once true. 
}
